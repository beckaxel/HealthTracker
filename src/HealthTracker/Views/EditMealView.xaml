<?xml version="1.0" encoding="UTF-8"?>
<mvvm:ViewBase
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:mvvm="clr-namespace:HealthTracker.MVVM"
    xmlns:c="clr-namespace:HealthTracker.Converters"
    x:Class="HealthTracker.Views.EditMealView">
    <ContentPage.Content>
        <StackLayout
            HorizontalOptions="FillAndExpand"
            VerticalOptions="FillAndExpand"
            Spacing="0"
            Margin="0"
            Padding="0"
            Style="{DynamicResource AppContent}"
        >
            <StackLayout
                Orientation="Horizontal"
                HorizontalOptions="FillAndExpand"
                VerticalOptions="Start"
                Style="{DynamicResource AppHeader}"
            >
                <Button
                    Margin="10"
                    WidthRequest="40"
                    HeightRequest="40"
                    CornerRadius="20"
                    BackgroundColor="Transparent"
                    HorizontalOptions="Start"
                    VerticalOptions="CenterAndExpand"
                    Command="{Binding CancelCommand}">
                    <Button.ImageSource>
                        <FontImageSource
                            Glyph="&#xf060;"
                            FontFamily="FontAwesomeSolid"
                            Color="{DynamicResource PrimaryTextColor}"
                            Size="Title"
                        />
                    </Button.ImageSource>
                </Button>
                <Label
                    Margin="10"
                    Text="Mahlzeit bearbeiten"
                    TextColor="{DynamicResource PrimaryTextColor}"
                    FontSize="Title"
                    FontAttributes="Bold"
                    HorizontalOptions="StartAndExpand"
                    VerticalOptions="CenterAndExpand"
                >
                    <Label.Style>
                        <Style TargetType="Label">
                            <Style.Triggers>                                
                                <DataTrigger TargetType="Label" Binding="{Binding EditMode}" Value="{x:Static mvvm:EditMode.Create}">
                                    <Setter Property="Text" Value="Mahlzeit erfassen" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style> 
                    </Label.Style>
                </Label>
                <Button
                    Margin="10"
                    WidthRequest="40"
                    HeightRequest="40"
                    CornerRadius="20"
                    BackgroundColor="Transparent"
                    HorizontalOptions="End"
                    VerticalOptions="CenterAndExpand"
                    Command="{Binding DeleteCommand}">
                    <Button.ImageSource>
                        <FontImageSource
                            Glyph="&#xf1f8;"
                            FontFamily="FontAwesomeSolid"
                            Color="{DynamicResource PrimaryTextColor}"
                            Size="Title"
                        />
                    </Button.ImageSource>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>                                
                                <DataTrigger TargetType="Button" Binding="{Binding EditMode}" Value="{x:Static mvvm:EditMode.Create}">
                                    <Setter Property="IsVisible" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style> 
                    </Button.Style>
                </Button>
            </StackLayout>
            <Grid
                HorizontalOptions="FillAndExpand"
                VerticalOptions="FillAndExpand"
            >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Frame
                    Grid.Column="1"
                    Grid.Row="0"
                    Grid.ColumnSpan="2"
                    Margin="40,20"
                    Padding="0"
                    CornerRadius="10"
                    HeightRequest="200"
                    BackgroundColor="{DynamicResource PrimaryColor}"
                >
                    <StackLayout
                        Spacing="0"
                        Padding="0"
                    >
                        <StackLayout
                            VerticalOptions="FillAndExpand"
                            HorizontalOptions="FillAndExpand"
                            Spacing="0"
                            Padding="20"
                            IsVisible="False"
                        >
                            <StackLayout.Triggers>
                                <MultiTrigger TargetType="StackLayout">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition
                                            Binding="{Binding IsPhotoTaking}"
                                            Value="False" />
                                        <BindingCondition
                                            Binding="{Binding HasPhotos}"
                                            Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="IsVisible" Value="True" />
                                </MultiTrigger>
                            </StackLayout.Triggers>
                            <Image
                                HorizontalOptions="FillAndExpand"
                                VerticalOptions="FillAndExpand"
                            >
                                <Image.Source>
                                    <FontImageSource
                                        Glyph="&#xf03e;"
                                        FontFamily="FontAwesomeSolid"
                                        Size="144"
                                        Color="{DynamicResource PrimaryDarkColor}"
                                    />
                                </Image.Source>
                            </Image>
                            <Button
                                CornerRadius="4"
                                ContentLayout="Left, 30"
                                HorizontalOptions="FillAndExpand"
                                VerticalOptions="End"
                                BackgroundColor="{DynamicResource SecondaryColor}"
                                TextColor="{DynamicResource SecondaryTextColor}"
                                FontSize="Medium"
                                Command="{Binding TakePhotoCommand}"
                    
                            >
                                <Button.Text>Foto hinzufügen</Button.Text>
                                <Button.ImageSource>
                                    <FontImageSource
                                        Glyph="&#xf030;"
                                        FontFamily="FontAwesomeSolid"
                                        Color="{DynamicResource SecondaryTextColor}"
                                    />
                                </Button.ImageSource>
                            </Button>
                        </StackLayout>
                    
                        <Image
                            HorizontalOptions="Center"
                            VerticalOptions="Center"
                            Aspect="AspectFit"
                            IsVisible="False"
                            Source="{Binding LatestPhoto, Converter={StaticResource PhotoViewModelToImageSource}}"
                        >
                            <Image.Triggers>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition
                                            Binding="{Binding IsPhotoTaking}"
                                            Value="False" />
                                        <BindingCondition
                                            Binding="{Binding HasPhotos}"
                                            Value="True" />
                                        </MultiTrigger.Conditions>
                                    <Setter Property="IsVisible" Value="True" />
                                </MultiTrigger>
                            </Image.Triggers>
                        </Image>

                        <StackLayout
                            HorizontalOptions="CenterAndExpand"
                            VerticalOptions="CenterAndExpand"
                            IsVisible="False"
                        >
                            <StackLayout.Triggers>
                                <DataTrigger TargetType="StackLayout" Binding="{Binding IsPhotoTaking}" Value="True">
                                    <Setter Property="IsVisible" Value="True" />
                                </DataTrigger>
                            </StackLayout.Triggers>
                            <ActivityIndicator
                                HorizontalOptions="Center"
                                VerticalOptions="End"
                                Color="{DynamicResource SecondaryColor}"
                                IsRunning="True"
                            />
                            <Label
                                Text="Bitte warten ..."
                                TextColor="{DynamicResource SecondaryColor}"
                                FontSize="Medium"
                                HorizontalOptions="CenterAndExpand"
                                VerticalOptions="StartAndExpand"
                                HorizontalTextAlignment="Center"
                                VerticalTextAlignment="Start"
                            />
                        </StackLayout>

                    </StackLayout>
                </Frame>
                <StackLayout
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Grid.Row="1"
                    Orientation="Horizontal"
                    HorizontalOptions="CenterAndExpand"
                    VerticalOptions="FillAndExpand"
                >
                    <DatePicker
                        Date="{Binding DateOfEatingTime}"
                        FontSize="Large"
                    />
                    <TimePicker
                        Time="{Binding TimeOfEatingTime}"
                        FontSize="Large"
                    />
                </StackLayout>
                <StackLayout
                    Grid.Column="1"
                    Grid.Row="2"
                    Grid.ColumnSpan="2"
                    Spacing="0"
                >
                    <Entry
                        Margin="0"
                        Text="{Binding Name}"
                        FontSize="Large"
                    />
                    <Label
                        Margin="15,0,0,20"
                        Text="Name des Gerichts"
                        HorizontalOptions="FillAndExpand"
                    />
                </StackLayout>
                <Picker
                    Grid.Column="1"
                    Grid.Row="3"
                    Margin="0"
                    ItemsSource="{x:Static c:MealTypeToStringConverter.Values}"
                    SelectedItem="{Binding MealType, Converter={StaticResource MealTypeToString}}"
                    HorizontalOptions="FillAndExpand"
                />
                <Picker
                    Grid.Column="2"
                    Grid.Row="3"
                    Margin="0"
                    ItemsSource="{x:Static c:DietToStringConverter.Values}"
                    SelectedItem="{Binding Diet, Converter={StaticResource DietToString}}"
                    HorizontalOptions="FillAndExpand"
                />
            </Grid>
            <StackLayout
                Orientation="Horizontal"
                HorizontalOptions="FillAndExpand"
                VerticalOptions="End"
                Style="{DynamicResource AppFooter}"
            >
                <Button
                    Margin="10"
                    CornerRadius="4"
                    ContentLayout="Right, 30"
                    HorizontalOptions="FillAndExpand"
                    BackgroundColor="{DynamicResource PrimaryLightColor}"
                    TextColor="{DynamicResource PrimaryTextColor}"
                    FontSize="Medium"
                    Command="{Binding CancelCommand}"
                >
                    <Button.Text>Abbrechen</Button.Text>
                    <Button.ImageSource>
                        <FontImageSource
                            Glyph="&#xf057;"
                            FontFamily="FontAwesomeRegular"
                            Color="{DynamicResource PrimaryTextColor}"
                        />
                    </Button.ImageSource>
                </Button>
                <Button
                    Margin="10"
                    CornerRadius="4"
                    ContentLayout="Right, 30"
                    HorizontalOptions="FillAndExpand"
                    BackgroundColor="{DynamicResource SecondaryColor}"
                    TextColor="{DynamicResource SecondaryTextColor}"
                    FontSize="Medium"
                    Command="{Binding SaveCommand}"
                >
                    <Button.Text>Speichern</Button.Text>
                    <Button.ImageSource>
                        <FontImageSource
                            Glyph="&#xf058;"
                            FontFamily="FontAwesomeRegular"
                            Color="{DynamicResource SecondaryTextColor}"
                        />
                    </Button.ImageSource>
                </Button>
            </StackLayout>
        </StackLayout>
    </ContentPage.Content>
</mvvm:ViewBase>
